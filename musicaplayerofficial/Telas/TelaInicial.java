/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package musicaplayerofficial.Telas;
 
import java.awt.Component;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import musicaplayerofficial.MusicaPlayerOfficial;
import static musicaplayerofficial.Telas.LoginTela.str;
 
/**
 *
 * @author cadoafb
 */
public class TelaInicial extends javax.swing.JFrame {
 
    /**
     * Creates new form TelaInicial
     */
    DefaultListModel modeloM = new DefaultListModel();
    DefaultListModel modeloP = new DefaultListModel();
    MusicaPlayerOfficial p = new MusicaPlayerOfficial();
    String diretorio;
    boolean darPlay2x = false;
    String stringSalvaUrl;
 
    public TelaInicial() {
        initComponents();
 
        DefaultListModel modeloM = new DefaultListModel();
        DefaultListModel modeloP = new DefaultListModel();
        listaDeMusicas.setModel(modeloM);
        listaPlaylist.setModel(modeloP);
 
        listaDeMusicas.removeAll();
        listaPlaylist.removeAll();
        nomeDaPlaylist.setVisible(false);
        criaPlaylist.setVisible(false);
        zera();
 
    }
 
    public static void zera() {
        musicaTocadaLabel.setVisible(false);
        musicaTocada.setText(" Selecione a m√∫sica para tocar!");
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    
    private void initComponents() {
 
        escolheMusicas = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        musicaTocada = new javax.swing.JLabel();
        musicaTocadaLabel = new javax.swing.JLabel();
        pause = new javax.swing.JButton();
        play = new javax.swing.JButton();
        addDiretorio = new javax.swing.JButton();
        playLists = new javax.swing.JLabel();
        musicasDoDiretorio = new javax.swing.JLabel();
        textoDiretorio = new javax.swing.JTextField();
        novaPlaylist = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDeMusicas = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaPlaylist = new javax.swing.JList<>();
        addUsuario = new javax.swing.JButton();
        laberAddDiretorio = new javax.swing.JLabel();
        nomeDaPlaylist = new javax.swing.JTextField();
        criaPlaylist = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        login = new javax.swing.JMenu();
        loginTela = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
 
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 85));
        setResizable(false);
 
        escolheMusicas.setText("Escolher Musicas");
        escolheMusicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escolheMusicasActionPerformed(evt);
            }
        });
 
        stop.setText("Stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });
 
        musicaTocada.setText("Musica tocada");
 
        musicaTocadaLabel.setText("Musica Tocando: ");
 
        pause.setText("Pause");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });
 
        play.setText("Play");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });
 
        addDiretorio.setText("Adicionar Diretorio");
        addDiretorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDiretorioActionPerformed(evt);
            }
        });
 
        playLists.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        playLists.setText("PlayLists:");
 
        musicasDoDiretorio.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        musicasDoDiretorio.setText("Musicas:");
 
        textoDiretorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoDiretorioActionPerformed(evt);
            }
        });
 
        novaPlaylist.setText("Criar nova Playlist");
        novaPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaPlaylistActionPerformed(evt);
            }
        });
 
        listaDeMusicas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaDeMusicas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaDeMusicasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaDeMusicas);
 
        listaPlaylist.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listaPlaylist);
 
        addUsuario.setText("Adicionar Usuario");
        addUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUsuarioActionPerformed(evt);
            }
        });
 
        laberAddDiretorio.setText("Cole o diretorio abaixo.");
 
        criaPlaylist.setText("Criar");
        criaPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criaPlaylistActionPerformed(evt);
            }
        });
 
        login.setText("Login");
        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginMouseClicked(evt);
            }
        });
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
 
        loginTela.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        loginTela.setText("Fazer Login");
        loginTela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginTelaMouseClicked(evt);
            }
        });
        loginTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginTelaActionPerformed(evt);
            }
        });
        login.add(loginTela);
 
        jMenuBar1.add(login);
 
        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);
 
        setJMenuBar(jMenuBar1);
 
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(musicaTocadaLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(musicaTocada))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(musicasDoDiretorio)
                                .addGap(128, 128, 128)
                                .addComponent(playLists, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(161, 161, 161))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(escolheMusicas, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(addDiretorio)
                                            .addComponent(textoDiretorio, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addUsuario)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(nomeDaPlaylist, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(novaPlaylist, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(laberAddDiretorio))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(76, 76, 76)
                                        .addComponent(criaPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(musicasDoDiretorio, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playLists, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(novaPlaylist))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nomeDaPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(criaPlaylist)
                        .addGap(18, 18, 18)
                        .addComponent(addUsuario)
                        .addGap(53, 53, 53)
                        .addComponent(addDiretorio)
                        .addGap(8, 8, 8)
                        .addComponent(laberAddDiretorio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoDiretorio, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)))
                .addGap(39, 47, Short.MAX_VALUE)
                .addComponent(escolheMusicas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stop)
                    .addComponent(play)
                    .addComponent(pause))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(musicaTocada)
                    .addComponent(musicaTocadaLabel))
                .addGap(33, 33, 33))
        );
 
        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void escolheMusicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escolheMusicasActionPerformed
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Arquivos mp3", "mp3");
        JFileChooser escolher = new JFileChooser();
        escolher.addChoosableFileFilter(filtro);
 
        int retornaValor = escolher.showOpenDialog(null);
 
        if (retornaValor == JFileChooser.APPROVE_OPTION) {
            //Tive q botar o stop aq p o nome atualizar corretamente!
            p.stopMusic();
 
            File arquivoEscolhido = escolher.getSelectedFile();
            String text = arquivoEscolhido + "";
            System.out.println(arquivoEscolhido.getPath());
            diretorio = arquivoEscolhido.getPath();
 
            String nomeDaMusica = arquivoEscolhido.getName();
            musicaTocada.setText(nomeDaMusica);
        }
 
        try {
            p.vaiNaPasta(diretorio);
            musicaTocadaLabel.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_escolheMusicasActionPerformed
 
    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        p.stopMusic();
    }//GEN-LAST:event_stopActionPerformed
 
    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
 
    }//GEN-LAST:event_loginActionPerformed
 
    private void loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseClicked
 
    }//GEN-LAST:event_loginMouseClicked
 
    private void loginTelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginTelaMouseClicked
 
    }//GEN-LAST:event_loginTelaMouseClicked
 
    private void loginTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginTelaActionPerformed
        LoginTela log = new LoginTela();
        log.setVisible(true);
    }//GEN-LAST:event_loginTelaActionPerformed
 
    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed
        try {
            p.pauseMusic();
        } catch (IOException ex) {
            //Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
        darPlay2x = true;
    }//GEN-LAST:event_pauseActionPerformed
 
    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        if (darPlay2x) {
            try {
                p.resumeMusica();
            } catch (IOException ex) {
                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        darPlay2x = false;
 
 
    }//GEN-LAST:event_playActionPerformed
 
    private void textoDiretorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoDiretorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoDiretorioActionPerformed
 
    public void repoeMusicasUsuario(String usuarioLogado) throws FileNotFoundException {
 
        File arqv = new File("/home/cadoafb/Music/" + usuarioLogado + "_Url1.log");
        Scanner fileScanner = new Scanner(arqv);
        stringSalvaUrl = "/home/cadoafb/Music";
         
         
        while (fileScanner.hasNextLine()) {
            str = fileScanner.nextLine();
            File folder = new File(str);
            File[] listOfFiles = folder.listFiles();
 
            for (File listOfFile : listOfFiles) {
                if (listOfFile.isFile()) {
                    System.out.println("File: " + listOfFile.getName());
 
                    if (listOfFile.getName().endsWith(".mp3")) {
                        modeloM.addElement(listOfFile.getName());
                    }
 
                    listaDeMusicas.setModel(modeloM);
 
                }
            }
            
 
        }
        listaDeMusicas.setModel(modeloM);
    }
 
    private void addDiretorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDiretorioActionPerformed
        File folder = new File(textoDiretorio.getText());
        File[] listOfFiles = folder.listFiles();
 
        for (File listOfFile : listOfFiles) {
            if (listOfFile.isFile()) {
                System.out.println("File: " + listOfFile.getName());
 
                if (listOfFile.getName().endsWith(".mp3")) {
                    modeloM.addElement(listOfFile.getName());
                }
 
                listaDeMusicas.setModel(modeloM);
 
            }
        }
 
        int contador = 1;
        File log = new File("/home/cadoafb/Music/" + LoginTela.usuarioLogado.getUsuario() + "_Url"
                + contador + ".log");
        try {
            PrintWriter out = new PrintWriter(new FileWriter(log, true));
            out.append(textoDiretorio.getText() + "\n");
            out.close();
 
        } catch (IOException e) {
            System.out.println("N√£o pode fazer o log!");
        }
 
    }//GEN-LAST:event_addDiretorioActionPerformed
 
    private void listaDeMusicasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaDeMusicasMouseClicked
        System.out.println(listaDeMusicas.getSelectedValue());
        String temp = stringSalvaUrl + "/" + listaDeMusicas.getSelectedValue();
        System.out.println(temp);
        try {
            p.vaiNaPasta(temp);
 
            
        } catch (IOException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }//GEN-LAST:event_listaDeMusicasMouseClicked
    /**
     * Deixa visivel a tela de cadastrar um novo usuario
     * @param evt 
     */
    private void addUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUsuarioActionPerformed
        if(LoginTela.usuarioLogado.isVip()) {
            AddUsuario addU = new AddUsuario();
            addU.setVisible(true);
        }
        else {
            DeveSerVIP janela = new DeveSerVIP();
            janela.setVisible(true);
        }
         
    }//GEN-LAST:event_addUsuarioActionPerformed
    
    /**
     * Deixa visivel a barra de texto para nomear a playlist a ser criada
     * @param evt 
     */
    private void novaPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaPlaylistActionPerformed
         
        if(LoginTela.usuarioLogado.isVip()) {
            nomeDaPlaylist.setVisible(true);
            criaPlaylist.setVisible(true);
        }
        else {
            DeveSerVIP janela = new DeveSerVIP();
            janela.setVisible(true);
        }
         
         
 
 
    }//GEN-LAST:event_novaPlaylistActionPerformed
    
    /**
     * Funcao que cria arquivo onde as musicas da playlist criada
     * pelo usuario ser√£o armazenadas
     * @param evt 
     */
    private void criaPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criaPlaylistActionPerformed
        criaPlaylist.setVisible(false);
        nomeDaPlaylist.setVisible(false);
        File folder = new File("/home/cadoafb/Music");
        File[] listOfFiles = folder.listFiles();
 
        int contador = 1;
        File log = new File("/home/cadoafb/Music/" + LoginTela.usuarioLogado.getUsuario() +
               "_" + nomeDaPlaylist.getText() + "_p" + contador + ".log");
        try {
            //Criar atualiza o cont at√© chegar em um nome de arqv q n existe ainda
            while (log.exists()) {
                contador++;
                log = new File("/home/cadoafb/Music/" + LoginTela.usuarioLogado.getUsuario() + "_p"
                        + contador + ".log");
 
            }
            log.createNewFile();
 
            } catch (IOException e) {
                System.out.println("N√£o pode fazer o log!");
            }
         
        folder = new File("/home/cadoafb/Music/");
        listOfFiles = folder.listFiles();
 
        for (File listOfFile : listOfFiles) {
            if (listOfFile.isFile()) {
                if(listOfFile.getName().endsWith(nomeDaPlaylist.getText() + "_p1.log")) {
                    modeloP.addElement(listOfFile.getName());
                     
                }
 
                listaPlaylist.setModel(modeloP);
 
            }
        }
    }//GEN-LAST:event_criaPlaylistActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDiretorio;
    private javax.swing.JButton addUsuario;
    private javax.swing.JButton criaPlaylist;
    private javax.swing.JButton escolheMusicas;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel laberAddDiretorio;
    private javax.swing.JList<String> listaDeMusicas;
    private javax.swing.JList<String> listaPlaylist;
    private javax.swing.JMenu login;
    private javax.swing.JMenuItem loginTela;
    public static javax.swing.JLabel musicaTocada;
    public static javax.swing.JLabel musicaTocadaLabel;
    private javax.swing.JLabel musicasDoDiretorio;
    private javax.swing.JTextField nomeDaPlaylist;
    private javax.swing.JButton novaPlaylist;
    private javax.swing.JButton pause;
    private javax.swing.JButton play;
    private javax.swing.JLabel playLists;
    private javax.swing.JButton stop;
    private javax.swing.JTextField textoDiretorio;
    // End of variables declaration//GEN-END:variables
}
